# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/options.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='common/options.proto',
  package='typedb.protocol',
  syntax='proto3',
  serialized_options=_b('\n\033com.vaticle.typedb.protocolB\014OptionsProto'),
  serialized_pb=_b('\n\x14\x63ommon/options.proto\x12\x0ftypedb.protocol\"\xc5\x04\n\x07Options\x12\x16\n\x05infer\x18\x01 \x01(\x08H\x00R\x05infer\x12)\n\x0ftrace_inference\x18\x02 \x01(\x08H\x01R\x0etraceInference\x12\x1a\n\x07\x65xplain\x18\x03 \x01(\x08H\x02R\x07\x65xplain\x12\x1c\n\x08parallel\x18\x04 \x01(\x08H\x03R\x08parallel\x12%\n\rprefetch_size\x18\x05 \x01(\x05H\x04R\x0cprefetchSize\x12\x1c\n\x08prefetch\x18\x06 \x01(\x08H\x05R\x08prefetch\x12?\n\x1bsession_idle_timeout_millis\x18\x07 \x01(\x05H\x06R\x18sessionIdleTimeoutMillis\x12L\n\"schema_lock_acquire_timeout_millis\x18\x08 \x01(\x05H\x07R\x1eschemaLockAcquireTimeoutMillis\x12*\n\x10read_any_replica\x18\t \x01(\x08H\x08R\x0ereadAnyReplicaB\x0b\n\tinfer_optB\x15\n\x13trace_inference_optB\r\n\x0b\x65xplain_optB\x0e\n\x0cparallel_optB\x13\n\x11prefetch_size_optB\x0e\n\x0cprefetch_optB\x1a\n\x18session_idle_timeout_optB!\n\x1fschema_lock_acquire_timeout_optB\x16\n\x14read_any_replica_optB+\n\x1b\x63om.vaticle.typedb.protocolB\x0cOptionsProtob\x06proto3')
)




_OPTIONS = _descriptor.Descriptor(
  name='Options',
  full_name='typedb.protocol.Options',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='infer', full_name='typedb.protocol.Options.infer', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='infer', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='trace_inference', full_name='typedb.protocol.Options.trace_inference', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='traceInference', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='explain', full_name='typedb.protocol.Options.explain', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='explain', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parallel', full_name='typedb.protocol.Options.parallel', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='parallel', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='prefetch_size', full_name='typedb.protocol.Options.prefetch_size', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='prefetchSize', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='prefetch', full_name='typedb.protocol.Options.prefetch', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='prefetch', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='session_idle_timeout_millis', full_name='typedb.protocol.Options.session_idle_timeout_millis', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='sessionIdleTimeoutMillis', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='schema_lock_acquire_timeout_millis', full_name='typedb.protocol.Options.schema_lock_acquire_timeout_millis', index=7,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='schemaLockAcquireTimeoutMillis', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='read_any_replica', full_name='typedb.protocol.Options.read_any_replica', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='readAnyReplica', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='infer_opt', full_name='typedb.protocol.Options.infer_opt',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='trace_inference_opt', full_name='typedb.protocol.Options.trace_inference_opt',
      index=1, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='explain_opt', full_name='typedb.protocol.Options.explain_opt',
      index=2, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='parallel_opt', full_name='typedb.protocol.Options.parallel_opt',
      index=3, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='prefetch_size_opt', full_name='typedb.protocol.Options.prefetch_size_opt',
      index=4, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='prefetch_opt', full_name='typedb.protocol.Options.prefetch_opt',
      index=5, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='session_idle_timeout_opt', full_name='typedb.protocol.Options.session_idle_timeout_opt',
      index=6, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='schema_lock_acquire_timeout_opt', full_name='typedb.protocol.Options.schema_lock_acquire_timeout_opt',
      index=7, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='read_any_replica_opt', full_name='typedb.protocol.Options.read_any_replica_opt',
      index=8, containing_type=None, fields=[]),
  ],
  serialized_start=42,
  serialized_end=623,
)

_OPTIONS.oneofs_by_name['infer_opt'].fields.append(
  _OPTIONS.fields_by_name['infer'])
_OPTIONS.fields_by_name['infer'].containing_oneof = _OPTIONS.oneofs_by_name['infer_opt']
_OPTIONS.oneofs_by_name['trace_inference_opt'].fields.append(
  _OPTIONS.fields_by_name['trace_inference'])
_OPTIONS.fields_by_name['trace_inference'].containing_oneof = _OPTIONS.oneofs_by_name['trace_inference_opt']
_OPTIONS.oneofs_by_name['explain_opt'].fields.append(
  _OPTIONS.fields_by_name['explain'])
_OPTIONS.fields_by_name['explain'].containing_oneof = _OPTIONS.oneofs_by_name['explain_opt']
_OPTIONS.oneofs_by_name['parallel_opt'].fields.append(
  _OPTIONS.fields_by_name['parallel'])
_OPTIONS.fields_by_name['parallel'].containing_oneof = _OPTIONS.oneofs_by_name['parallel_opt']
_OPTIONS.oneofs_by_name['prefetch_size_opt'].fields.append(
  _OPTIONS.fields_by_name['prefetch_size'])
_OPTIONS.fields_by_name['prefetch_size'].containing_oneof = _OPTIONS.oneofs_by_name['prefetch_size_opt']
_OPTIONS.oneofs_by_name['prefetch_opt'].fields.append(
  _OPTIONS.fields_by_name['prefetch'])
_OPTIONS.fields_by_name['prefetch'].containing_oneof = _OPTIONS.oneofs_by_name['prefetch_opt']
_OPTIONS.oneofs_by_name['session_idle_timeout_opt'].fields.append(
  _OPTIONS.fields_by_name['session_idle_timeout_millis'])
_OPTIONS.fields_by_name['session_idle_timeout_millis'].containing_oneof = _OPTIONS.oneofs_by_name['session_idle_timeout_opt']
_OPTIONS.oneofs_by_name['schema_lock_acquire_timeout_opt'].fields.append(
  _OPTIONS.fields_by_name['schema_lock_acquire_timeout_millis'])
_OPTIONS.fields_by_name['schema_lock_acquire_timeout_millis'].containing_oneof = _OPTIONS.oneofs_by_name['schema_lock_acquire_timeout_opt']
_OPTIONS.oneofs_by_name['read_any_replica_opt'].fields.append(
  _OPTIONS.fields_by_name['read_any_replica'])
_OPTIONS.fields_by_name['read_any_replica'].containing_oneof = _OPTIONS.oneofs_by_name['read_any_replica_opt']
DESCRIPTOR.message_types_by_name['Options'] = _OPTIONS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Options = _reflection.GeneratedProtocolMessageType('Options', (_message.Message,), dict(
  DESCRIPTOR = _OPTIONS,
  __module__ = 'common.options_pb2'
  # @@protoc_insertion_point(class_scope:typedb.protocol.Options)
  ))
_sym_db.RegisterMessage(Options)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
